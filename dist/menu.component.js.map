{"version":3,"file":"menu.component.js","sourceRoot":"","sources":["../src/menu.component.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,aAAa,CAAC;AAC7D,OAAO,EAAE,IAAI,EAAE,MAAM,mBAAmB,CAAC;AACzC,OAAO,EAAE,QAAQ,EAAE,MAAM,uBAAuB,CAAC;AACjD,OAAO,UAAU,MAAM,eAAe,CAAC;AACvC,OAAO,QAAQ,MAAM,iBAAiB,CAAC;AAGvC,IAAa,IAAI,GAAjB,MAAa,IAAK,SAAQ,IAAI;IAA9B;;QAGqC,UAAK,GAAW,EAAE,CAAC;QAClB,eAAU,GAAY,KAAK,CAAC;IAqClE,CAAC;IAlCW,QAAQ;QAChB,OAAQ,IAAI,CAAC,IAAwB;aAClC,aAAa,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;aAChC,MAAM,CAAC,CAAC,CAAO,EAAE,EAAE,CAAC,CAAC,CAAC,YAAY,QAAQ,IAAI,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAsB,CAAC;IACpG,CAAC;IAES,gBAAgB,CAAC,CAAC;QAC1B,IAAI,cAAc,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAO,EAAE,EAAE,CAAC,CAAC,CAAC,YAAY,QAAQ,CAAC,CAAC,CAAC;QACzE,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC9B,IAAI,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;gBAC9B,YAAY,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;gBACvC,KAAK;qBACF,MAAM,CAAC,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,IAAI,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;qBAC5D,OAAO,CAAC,CAAC,IAAS,EAAE,EAAE;oBACrB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAA;gBACvB,CAAC,CAAC,CAAA;aACL;SACF;QACD,IAAI,YAAY,GAAG,IAAI,WAAW,CAAC,iBAAiB,EAAE;YACpD,MAAM,EAAE;gBACN,YAAY,EAAE,YAAY;aAC3B;YACD,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;IACnC,CAAC;IAGS,MAAM;QACd,OAAO,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;CACF,CAAA;AAxCe,oBAAe,GAAG,UAAU,CAAC;AAEf;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;mCAA2B;AACzB;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;wCAAoC;AACjD;IAAd,KAAK,CAAC,MAAM,CAAC;8BAAgB,WAAW;kCAAC;AAL/B,IAAI;IADhB,aAAa,CAAC,SAAS,CAAC;GACZ,IAAI,CAyChB;SAzCY,IAAI","sourcesContent":["import { customElement, property, query } from 'lit-element';\r\nimport { Base } from '@spectrum/sp-base';\r\nimport { MenuItem } from '@spectrum/sp-menuitem';\r\nimport menuStyles from './menu.styles';\r\nimport template from './menu.template';\r\n\r\n@customElement('sp-menu')\r\nexport class Menu extends Base {\r\n  public static componentStyles = menuStyles;\r\n\r\n  @property({ type: String }) public width: string = '';\r\n  @property({ type: Boolean }) public selectable: boolean = false;\r\n  @query('slot') private slot!: HTMLElement;\r\n\r\n  protected getItems(): MenuItem[] {\r\n    return (this.slot as HTMLSlotElement)\r\n      .assignedNodes({ flatten: true })\r\n      .filter((e: Node) => (e instanceof MenuItem && !e.divider && !e.disabled)) as any as MenuItem[];\r\n  }\r\n\r\n  protected handleSlotChange(e) {\r\n    let currentElement = e.path.filter((e: Node) => (e instanceof MenuItem));\r\n    let selectedItem = '';\r\n    if (this.slot) {\r\n      const items = this.getItems();\r\n      if (currentElement[0].selected) {\r\n        selectedItem = currentElement[0].label;\r\n        items\r\n          .filter((item: any) => item.label != currentElement[0].label)\r\n          .forEach((item: any) => {\r\n            item.selected = false\r\n          })\r\n      }\r\n    }\r\n    let changedEvent = new CustomEvent('slectionchanged', {\r\n      detail: {\r\n        selectedItem: selectedItem\r\n      },\r\n      bubbles: true,\r\n      composed: true\r\n    });\r\n    this.dispatchEvent(changedEvent);\r\n  }\r\n\r\n\r\n  protected render() {\r\n    return template.call(this);\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'sp-menu': Menu;\r\n  }\r\n}\r\n"]}